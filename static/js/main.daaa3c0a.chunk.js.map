{"version":3,"sources":["Store.tsx","App.tsx","Actions.ts","components/HomePage.tsx","components/FavPage.tsx","index.tsx"],"names":["initialState","episodes","favourites","Store","createContext","reducer","state","action","type","payload","StoreProvider","children","useReducer","dispatch","Provider","value","App","useContext","className","to","process","length","fetchDataAction","a","fetch","data","json","dataJSON","_embedded","toggleFavAction","episode","episodeInFav","includes","dispatchObj","filter","fav","id","EpisodesList","lazy","HomePage","useEffect","props","store","fallback","FavPage","React","RouterPage","pageComponent","ReactDOM","render","path","document","getElementById"],"mappings":"oPAEMA,EAAuB,CAC5BC,SAAU,GACVC,WAAY,IAEAC,EAAQC,wBAA4BJ,GAC3CK,EAAU,SAACC,EAAeC,GAC/B,OAAQA,EAAOC,MACd,IAAK,aACJ,OAAO,2BAAKF,GAAZ,IAAmBL,SAAUM,EAAOE,UACrC,IAAK,UACJ,OAAO,2BAAKH,GAAZ,IAAmBJ,WAAW,GAAD,mBAAMI,EAAMJ,YAAZ,CAAwBK,EAAOE,YAC7D,IAAK,aACJ,OAAO,2BAAKH,GAAZ,IAAmBJ,WAAYK,EAAOE,UACvC,QACC,OAAOH,IAGGI,EAAgB,SAAC,GAEoB,IADjDC,EACgD,EADhDA,SACgD,EACtBC,qBAAWP,EAASL,GADE,mBACzCM,EADyC,KAClCO,EADkC,KAEhD,OACC,kBAACV,EAAMW,SAAP,CAAgBC,MAAO,CAAET,QAAOO,aAAaF,I,OCChCK,EArBH,SAAC,GAA0D,IAAxDL,EAAuD,EAAvDA,SACNL,EAAUW,qBAAWd,GAArBG,MAER,OACC,kBAAC,WAAD,KACC,4BAAQY,UAAU,UACjB,6BACC,4CACA,2DAED,6BACC,kBAAC,IAAD,CAAMC,GAAE,UAAKC,eAAL,MAAR,QACA,kBAAC,IAAD,CAAMD,GAAE,UAAKC,eAAL,WAAR,iBACgBd,EAAMJ,WAAWmB,UAIlCV,I,wBCpBSW,EAAe,uCAAG,WAAOT,GAAP,iBAAAU,EAAA,4DAE7B,8EAF6B,SAIXC,MAFlB,+EAF6B,cAIxBC,EAJwB,gBAKPA,EAAKC,OALE,cAKxBC,EALwB,yBAMvBd,EAAS,CACfL,KAAM,aACNC,QAASkB,EAASC,UAAU3B,YARC,2CAAH,sDAYf4B,EAAkB,SAC9BvB,EACAO,EACAiB,GAEA,IAAMC,EAAezB,EAAMJ,WAAW8B,SAASF,GAC3CG,EAAc,CACjBzB,KAAM,UACNC,QAASqB,GAENC,IAIHE,EAAc,CACbzB,KAAM,aACNC,QALyBH,EAAMJ,WAAWgC,QAC1C,SAACC,GAAD,OAAmBA,EAAIC,KAAON,EAAQM,QAOxC,OAAOvB,EAASoB,IC1BXI,EAAeC,gBAAU,kBAAM,gCAsBtBC,EArBE,WAAoB,IAAD,EACPtB,qBAAWd,GAA/BG,EAD2B,EAC3BA,MAAOO,EADoB,EACpBA,SACf2B,qBAAU,WACiB,IAA1BlC,EAAML,SAASoB,QAAgBC,EAAgBT,MAEhD,IAAM4B,EAAuB,CAC5BxC,SAAUK,EAAML,SAChByC,MAAO,CAAEpC,QAAOO,YAChBgB,kBACA3B,WAAYI,EAAMJ,YAEnB,OACC,kBAAC,EAAD,KACC,kBAAC,WAAD,CAAUyC,SAAU,4CACnB,6BAASzB,UAAU,kBAClB,kBAACmB,EAAiBI,OCjBjBJ,EAAeC,gBAAU,kBAAM,gCACtB,SAASM,IAAwB,IAAD,EAClBC,IAAM5B,WAAWd,GAArCG,EADsC,EACtCA,MAAOO,EAD+B,EAC/BA,SACT4B,EAAuB,CAC5BxC,SAAUK,EAAMJ,WAChBwC,MAAO,CAAEpC,QAAOO,YAChBgB,kBACA3B,WAAYI,EAAMJ,YAEnB,OACC,kBAAC,EAAD,KACC,kBAAC,WAAD,CAAUyC,SAAU,4CACnB,yBAAKzB,UAAU,kBACd,kBAAC,EAAiBuB,MCVvB,IAAMK,EAAa,SAClBL,GADkB,OAEdA,EAAMM,eAEXC,IAASC,OACR,kBAAC,EAAD,KACC,kBAAC,IAAD,KACC,kBAACH,EAAD,CACCC,cAAe,kBAAC,EAAD,MACfG,KAAI,UAAK9B,eAAL,OAEL,kBAAC0B,EAAD,CACCC,cAAe,kBAACH,EAAD,MACfM,KAAI,UAAK9B,eAAL,cAIP+B,SAASC,eAAe,W","file":"static/js/main.daaa3c0a.chunk.js","sourcesContent":["import React, { useReducer, createContext } from 'react';\r\nimport { IState, IAction } from './types/interfaces';\r\nconst initialState: IState = {\r\n\tepisodes: [],\r\n\tfavourites: [],\r\n};\r\nexport const Store = createContext<IState | any>(initialState);\r\nconst reducer = (state: IState, action: IAction): IState => {\r\n\tswitch (action.type) {\r\n\t\tcase 'FETCH_DATA':\r\n\t\t\treturn { ...state, episodes: action.payload };\r\n\t\tcase 'ADD_FAV':\r\n\t\t\treturn { ...state, favourites: [...state.favourites, action.payload] };\r\n\t\tcase 'REMOVE_FAV':\r\n\t\t\treturn { ...state, favourites: action.payload };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\nexport const StoreProvider = ({\r\n\tchildren,\r\n}: JSX.ElementChildrenAttribute): JSX.Element => {\r\n\tconst [state, dispatch] = useReducer(reducer, initialState);\r\n\treturn (\r\n\t\t<Store.Provider value={{ state, dispatch }}>{children}</Store.Provider>\r\n\t);\r\n};\r\n","import React, { useContext, Fragment } from 'react';\r\nimport { Store } from './Store';\r\nimport { Link } from '@reach/router';\r\n\r\nconst App = ({ children }: { children: JSX.Element }): JSX.Element => {\r\n\tconst { state } = useContext(Store);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<header className=\"header\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h1>Money Heist!</h1>\r\n\t\t\t\t\t<p>Pick your favourite episode</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Link to={`${process.env.PUBLIC_URL}/`}>Home</Link>\r\n\t\t\t\t\t<Link to={`${process.env.PUBLIC_URL}/faves`}>\r\n\t\t\t\t\t\tFavourite(s): {state.favourites.length}\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\t\t\t</header>\r\n\t\t\t{children}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\nexport default App;\r\n","import { IAction, IEpisode, IState, Dispatch } from './types/interfaces';\r\nexport const fetchDataAction = async (dispatch: Dispatch) => {\r\n\tconst URL =\r\n\t\t'https://api.tvmaze.com/singlesearch/shows?q=la-casa-de-papel&embed=episodes';\r\n\r\n\tconst data = await fetch(URL);\r\n\tconst dataJSON = await data.json();\r\n\treturn dispatch({\r\n\t\ttype: 'FETCH_DATA',\r\n\t\tpayload: dataJSON._embedded.episodes,\r\n\t});\r\n};\r\n//Add IState withits type\r\nexport const toggleFavAction = (\r\n\tstate: IState,\r\n\tdispatch: any,\r\n\tepisode: IEpisode | any\r\n): IAction => {\r\n\tconst episodeInFav = state.favourites.includes(episode);\r\n\tlet dispatchObj = {\r\n\t\ttype: 'ADD_FAV',\r\n\t\tpayload: episode,\r\n\t};\r\n\tif (episodeInFav) {\r\n\t\tconst favWithoutEpisode = state.favourites.filter(\r\n\t\t\t(fav: IEpisode) => fav.id !== episode.id\r\n\t\t);\r\n\t\tdispatchObj = {\r\n\t\t\ttype: 'REMOVE_FAV',\r\n\t\t\tpayload: favWithoutEpisode,\r\n\t\t};\r\n\t}\r\n\treturn dispatch(dispatchObj);\r\n};\r\n","import React, { useContext, useEffect, lazy, Suspense } from 'react';\r\nimport App from '../App';\r\nimport { Store } from '../Store';\r\nimport { IEpisodeProps } from '../types/interfaces';\r\nimport { fetchDataAction, toggleFavAction } from '../Actions';\r\n\r\nconst EpisodesList = lazy<any>(() => import('./EpisodesList'));\r\nconst HomePage = (): JSX.Element => {\r\n\tconst { state, dispatch } = useContext(Store);\r\n\tuseEffect(() => {\r\n\t\tstate.episodes.length === 0 && fetchDataAction(dispatch);\r\n\t});\r\n\tconst props: IEpisodeProps = {\r\n\t\tepisodes: state.episodes,\r\n\t\tstore: { state, dispatch },\r\n\t\ttoggleFavAction,\r\n\t\tfavourites: state.favourites,\r\n\t};\r\n\treturn (\r\n\t\t<App>\r\n\t\t\t<Suspense fallback={<div>loading...</div>}>\r\n\t\t\t\t<section className=\"episode-layout\">\r\n\t\t\t\t\t<EpisodesList {...props} />\r\n\t\t\t\t</section>\r\n\t\t\t</Suspense>\r\n\t\t</App>\r\n\t);\r\n};\r\nexport default HomePage;\r\n","import React, { lazy, Suspense } from 'react';\r\nimport App from '../App';\r\nimport { Store } from '../Store';\r\nimport { IEpisodeProps } from '../types/interfaces';\r\nimport { toggleFavAction } from '../Actions';\r\nconst EpisodesList = lazy<any>(() => import('./EpisodesList'));\r\nexport default function FavPage(): JSX.Element {\r\n\tconst { state, dispatch } = React.useContext(Store);\r\n\tconst props: IEpisodeProps = {\r\n\t\tepisodes: state.favourites,\r\n\t\tstore: { state, dispatch },\r\n\t\ttoggleFavAction,\r\n\t\tfavourites: state.favourites,\r\n\t};\r\n\treturn (\r\n\t\t<App>\r\n\t\t\t<Suspense fallback={<div>loading...</div>}>\r\n\t\t\t\t<div className=\"episode-layout\">\r\n\t\t\t\t\t<EpisodesList {...props} />\r\n\t\t\t\t</div>\r\n\t\t\t</Suspense>\r\n\t\t</App>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { StoreProvider } from './Store';\r\nimport { Router, RouteComponentProps } from '@reach/router';\r\nimport HomePage from './components/HomePage';\r\nimport FavPage from './components/FavPage';\r\n\r\nconst RouterPage = (\r\n\tprops: { pageComponent: JSX.Element } & RouteComponentProps\r\n) => props.pageComponent;\r\n\r\nReactDOM.render(\r\n\t<StoreProvider>\r\n\t\t<Router>\r\n\t\t\t<RouterPage\r\n\t\t\t\tpageComponent={<HomePage />}\r\n\t\t\t\tpath={`${process.env.PUBLIC_URL}/`}\r\n\t\t\t/>\r\n\t\t\t<RouterPage\r\n\t\t\t\tpageComponent={<FavPage />}\r\n\t\t\t\tpath={`${process.env.PUBLIC_URL}/faves`}\r\n\t\t\t/>\r\n\t\t</Router>\r\n\t</StoreProvider>,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}